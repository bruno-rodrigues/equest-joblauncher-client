<?php
/**
 * Position
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * Position Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Position implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'title' => 'string',
        'description' => 'string',
        'skills' => 'string',
        'education' => 'string',
        'benefits' => 'string',
        'compensation' => '\Swagger\Client\Model\Compensation',
        'location' => '\Swagger\Client\Model\Location',
        'travel_percentage' => 'string',
        'telecommute_percentage' => 'string',
        'classification' => '\Swagger\Client\Model\Classification'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'title' => 'title',
        'description' => 'description',
        'skills' => 'skills',
        'education' => 'education',
        'benefits' => 'benefits',
        'compensation' => 'compensation',
        'location' => 'location',
        'travel_percentage' => 'travel_percentage',
        'telecommute_percentage' => 'telecommute_percentage',
        'classification' => 'classification'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'title' => 'setTitle',
        'description' => 'setDescription',
        'skills' => 'setSkills',
        'education' => 'setEducation',
        'benefits' => 'setBenefits',
        'compensation' => 'setCompensation',
        'location' => 'setLocation',
        'travel_percentage' => 'setTravelPercentage',
        'telecommute_percentage' => 'setTelecommutePercentage',
        'classification' => 'setClassification'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'title' => 'getTitle',
        'description' => 'getDescription',
        'skills' => 'getSkills',
        'education' => 'getEducation',
        'benefits' => 'getBenefits',
        'compensation' => 'getCompensation',
        'location' => 'getLocation',
        'travel_percentage' => 'getTravelPercentage',
        'telecommute_percentage' => 'getTelecommutePercentage',
        'classification' => 'getClassification'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $title 
      * @var string
      */
    protected $title;
    
    /**
      * $description 
      * @var string
      */
    protected $description;
    
    /**
      * $skills 
      * @var string
      */
    protected $skills;
    
    /**
      * $education 
      * @var string
      */
    protected $education;
    
    /**
      * $benefits 
      * @var string
      */
    protected $benefits;
    
    /**
      * $compensation 
      * @var \Swagger\Client\Model\Compensation
      */
    protected $compensation;
    
    /**
      * $location 
      * @var \Swagger\Client\Model\Location
      */
    protected $location;
    
    /**
      * $travel_percentage 
      * @var string
      */
    protected $travel_percentage;
    
    /**
      * $telecommute_percentage 
      * @var string
      */
    protected $telecommute_percentage;
    
    /**
      * $classification 
      * @var \Swagger\Client\Model\Classification
      */
    protected $classification;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->title = $data["title"];
            $this->description = $data["description"];
            $this->skills = $data["skills"];
            $this->education = $data["education"];
            $this->benefits = $data["benefits"];
            $this->compensation = $data["compensation"];
            $this->location = $data["location"];
            $this->travel_percentage = $data["travel_percentage"];
            $this->telecommute_percentage = $data["telecommute_percentage"];
            $this->classification = $data["classification"];
        }
    }
    
    /**
     * Gets title
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }
  
    /**
     * Sets title
     * @param string $title 
     * @return $this
     */
    public function setTitle($title)
    {
        
        $this->title = $title;
        return $this;
    }
    
    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }
  
    /**
     * Sets description
     * @param string $description 
     * @return $this
     */
    public function setDescription($description)
    {
        
        $this->description = $description;
        return $this;
    }
    
    /**
     * Gets skills
     * @return string
     */
    public function getSkills()
    {
        return $this->skills;
    }
  
    /**
     * Sets skills
     * @param string $skills 
     * @return $this
     */
    public function setSkills($skills)
    {
        
        $this->skills = $skills;
        return $this;
    }
    
    /**
     * Gets education
     * @return string
     */
    public function getEducation()
    {
        return $this->education;
    }
  
    /**
     * Sets education
     * @param string $education 
     * @return $this
     */
    public function setEducation($education)
    {
        
        $this->education = $education;
        return $this;
    }
    
    /**
     * Gets benefits
     * @return string
     */
    public function getBenefits()
    {
        return $this->benefits;
    }
  
    /**
     * Sets benefits
     * @param string $benefits 
     * @return $this
     */
    public function setBenefits($benefits)
    {
        
        $this->benefits = $benefits;
        return $this;
    }
    
    /**
     * Gets compensation
     * @return \Swagger\Client\Model\Compensation
     */
    public function getCompensation()
    {
        return $this->compensation;
    }
  
    /**
     * Sets compensation
     * @param \Swagger\Client\Model\Compensation $compensation 
     * @return $this
     */
    public function setCompensation($compensation)
    {
        
        $this->compensation = $compensation;
        return $this;
    }
    
    /**
     * Gets location
     * @return \Swagger\Client\Model\Location
     */
    public function getLocation()
    {
        return $this->location;
    }
  
    /**
     * Sets location
     * @param \Swagger\Client\Model\Location $location 
     * @return $this
     */
    public function setLocation($location)
    {
        
        $this->location = $location;
        return $this;
    }
    
    /**
     * Gets travel_percentage
     * @return string
     */
    public function getTravelPercentage()
    {
        return $this->travel_percentage;
    }
  
    /**
     * Sets travel_percentage
     * @param string $travel_percentage 
     * @return $this
     */
    public function setTravelPercentage($travel_percentage)
    {
        
        $this->travel_percentage = $travel_percentage;
        return $this;
    }
    
    /**
     * Gets telecommute_percentage
     * @return string
     */
    public function getTelecommutePercentage()
    {
        return $this->telecommute_percentage;
    }
  
    /**
     * Sets telecommute_percentage
     * @param string $telecommute_percentage 
     * @return $this
     */
    public function setTelecommutePercentage($telecommute_percentage)
    {
        
        $this->telecommute_percentage = $telecommute_percentage;
        return $this;
    }
    
    /**
     * Gets classification
     * @return \Swagger\Client\Model\Classification
     */
    public function getClassification()
    {
        return $this->classification;
    }
  
    /**
     * Sets classification
     * @param \Swagger\Client\Model\Classification $classification 
     * @return $this
     */
    public function setClassification($classification)
    {
        
        $this->classification = $classification;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
